version: 2.1

orbs:
  docker: circleci/docker@2.6.0
  maven: circleci/maven@1.4.1
  snyk: snyk/snyk@2.1.0

jobs:
  build_and_test: # Job name.
    docker: # Environment.
      - image: cimg/openjdk:21.0.2
        environment:
          PGHOST: 127.0.0.1
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: the_review_room

    steps:
      - checkout # Check out source code to the working directory.
      - run: |
          echo "Installing dependencies..."
          mvn dependency:go-offline # Get the project dependencies. Goal that resolves all project dependencies, including plugins and reports and their dependencies.
      - run: mvn verify # Build and run the tests.
      - store_test_results: # Upload the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          path: target/surefire-reports
      - store_artifacts: # Store the uber jar as an artifact.
          path: target/the-review-room-0.0.1-SNAPSHOT.jar
  scan:
    docker:
      - image: cimg/base:current

    environment: # The environment allows us to create an environment for the job and allows us to create custom environment variables.
      IMAGE_NAME: nhkhai/education-space

    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME . # $IMAGE_NAME gets the value from the environment we created above.
      - snyk/scan: # This triggers the Snyk scan using the preconfigured SNYK_TOKEN environmental variable.
          docker-image-name: $IMAGE_NAME # The image name, if scanning a container image.
          fail-on-issues: false # This specifies if builds should be failed or continued based on issues found by Snyk. If false, the failure is hidden and marked as a pass.
          severity-threshold: high # Only report vulnerabilities of provided level or higher (low/medium/high/critical). If param is not present, the default value is low.

  publish: # Also known as the build-and-push.
    executor: docker/docker # Define the execution environment in which the steps of a job will run.S
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - docker/build: # Build the image.
          image: nhkhai/the-review-room
          tag: latest # Consider setting this dynamically based on the tag using env vars or CircleCI parameters.
      - docker/push: # Pushes the image to the specified account in the environment variables.
          image: nhkhai/the-review-room
          tag: latest # Consider setting this dynamically based on the tag using env vars or CircleCI parameters.
  deploy:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Render Deploy Hook
          command: |
            curl "$RENDER_DEPLOY_HOOK_URL"

workflows:
  ci_flow: # Workflow name. This is the name of the workflow, feel free to change it to better match your workflow.
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore:
                - release
      - scan:
          requires:
            - build_and_test
      - publish:
          requires:
            - build_and_test
            - scan
          filters:
            branches:
              ignore:
                - develop
  cicd_flow:
    jobs:
      - build_and_test:
          filters:
            branches:
              only:
                - release
      - scan:
          requires:
            - build_and_test
      - publish:
          requires:
            - build_and_test
            - scan
      - deploy:
          requires:
            - publish