# This workflow will build a Java Spring Boot Application with Maven, and run test cases. 
name: Build and Test Java Spring Boot Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  run-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Setup DB
        uses: harmon758/postgresql-action@v1
        with:
          # postgresql version: 'latest'      # See https://hub.docker.com/_/postgres for available versions. 
          postgresql db: smart_inventory
          postgresql user: postgres
          # postgresql password: 
          
      #- name: Sleep for 10 seconds
      #  run: sleep 10s
      #  shell: bash
        # run: Start-Sleep -s 30
        # shell: powershell
        
      #- name: Collect Docker Logs
      #  uses: jwalton/gh-docker-logs@v2.2.2
     
      #- name: Check running containers
      #  run: docker ps -a

      - name: Pull repository
        uses: actions/checkout@v4.1.2
    
      - name: Set up JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '21'
          distribution: 'temurin'
          # cache: maven      # Uncomment and configure if needed. 
        
      - name: Run unit tests
        run: mvn test
      
      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive. 
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: Build Jar file
        run: mvn package -DskipTests      # Skip tests since they were already run. 
      
      - name: Save Jar file
        uses: actions/upload-artifact@v3
        with:
          name: demo-0.0.1-SNAPSHOT
          path: target/demo-0.0.1-SNAPSHOT.jar 
          retention-days: 1
